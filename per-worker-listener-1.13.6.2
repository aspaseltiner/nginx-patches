Only in openresty-1.13.6.2/bundle/nginx-1.13.6/src/core: nginx.c.orig
diff -ru openresty-1.13.6.2/bundle/nginx-1.13.6/src/core/ngx_connection.c openresty-1.13.6.2/bundle/nginx-1.13.6/src/core/ngx_connection.c
--- openresty-1.13.6.2/bundle/nginx-1.13.6/src/core/ngx_connection.c	2017-10-26 01:42:53.000000000 -0400
+++ openresty-1.13.6.2/bundle/nginx-1.13.6/src/core/ngx_connection.c	2019-04-03 14:59:04.000000000 -0400
@@ -8,6 +8,7 @@
 #include <ngx_config.h>
 #include <ngx_core.h>
 #include <ngx_event.h>
+#include <nginx.h>
 
 
 ngx_os_io_t  ngx_io;
@@ -391,6 +392,13 @@
     ngx_socket_t      s;
     ngx_listening_t  *ls;
 
+    size_t                len;
+    struct sockaddr      *sockaddr;
+    struct sockaddr_in   *sin;
+#if (NGX_HAVE_INET6)
+    struct sockaddr_in6  *sin6;
+#endif
+
     reuseaddr = 1;
 #if (NGX_SUPPRESS_WARN)
     failed = 0;
@@ -441,6 +449,57 @@
                 continue;
             }
 
+            sockaddr = ls[i].sockaddr;
+
+            if (ngx_process == NGX_PROCESS_WORKER) {
+
+                if (!ls[i].per_worker) {
+                    continue;
+                }
+
+                sockaddr = ngx_palloc(cycle->pool, ls[i].socklen);
+                if (sockaddr == NULL) {
+                    return NGX_ERROR;
+                }
+
+                ngx_memcpy(sockaddr, ls[i].sockaddr, ls[i].socklen);
+
+                switch (ls[i].sockaddr->sa_family) {
+#if (NGX_HAVE_INET6)
+                    case AF_INET6:
+                        sin6 = (struct sockaddr_in6 *) sockaddr;
+                        sin6->sin6_port = htons(ntohs(sin6->sin6_port) +
+                                          ngx_worker_slot);
+                        break;
+#endif
+                    default: /* AF_INET */
+                        sin = (struct sockaddr_in *) sockaddr;
+                        sin->sin_port = htons(ntohs(sin->sin_port) +
+                                        ngx_worker_slot);
+                }
+
+                len = ls[i].addr_text_max_len;
+                ls[i].addr_text.data = ngx_palloc(cycle->pool, len);
+
+                if (ls[i].addr_text.data == NULL) {
+                    return NGX_ERROR;
+                }
+
+                len = ngx_sock_ntop(sockaddr,
+#if (nginx_version >= 1005003)
+				    ls[i].socklen,
+#endif
+				    ls[i].addr_text.data, len, 1);
+                if (len == 0) {
+                    return NGX_ERROR;
+                }
+
+                ls[i].addr_text.len = len;
+
+            } else if (ls[i].per_worker) {
+                continue;
+            }
+
             if (ls[i].inherited) {
 
                 /* TODO: close on exit */
@@ -539,7 +598,7 @@
             ngx_log_debug2(NGX_LOG_DEBUG_CORE, log, 0,
                            "bind() %V #%d ", &ls[i].addr_text, s);
 
-            if (bind(s, ls[i].sockaddr, ls[i].socklen) == -1) {
+            if (bind(s, sockaddr, ls[i].socklen) == -1) {
                 err = ngx_socket_errno;
 
                 if (err != NGX_EADDRINUSE || !ngx_test_config) {
diff -ru openresty-1.13.6.2/bundle/nginx-1.13.6/src/core/ngx_connection.h openresty-1.13.6.2/bundle/nginx-1.13.6/src/core/ngx_connection.h
--- openresty-1.13.6.2/bundle/nginx-1.13.6/src/core/ngx_connection.h	2017-10-26 01:42:53.000000000 -0400
+++ openresty-1.13.6.2/bundle/nginx-1.13.6/src/core/ngx_connection.h	2019-04-03 14:59:15.000000000 -0400
@@ -56,6 +56,7 @@
     unsigned            open:1;
     unsigned            remain:1;
     unsigned            ignore:1;
+    unsigned            per_worker:1;
 
     unsigned            bound:1;       /* already bound */
     unsigned            inherited:1;   /* inherited from previous process */
Only in openresty-1.13.6.2/bundle/nginx-1.13.6/src/core: ngx_cycle.h.orig
Only in openresty-1.13.6.2/bundle/nginx-1.13.6/src/core: ngx_log.h.orig
Only in openresty-1.13.6.2/bundle/nginx-1.13.6/src/core: ngx_resolver.c.orig
diff -ru openresty-1.13.6.2/bundle/nginx-1.13.6/src/http/ngx_http.c openresty-1.13.6.2/bundle/nginx-1.13.6/src/http/ngx_http.c
--- openresty-1.13.6.2/bundle/nginx-1.13.6/src/http/ngx_http.c	2018-05-14 16:24:38.000000000 -0400
+++ openresty-1.13.6.2/bundle/nginx-1.13.6/src/http/ngx_http.c	2019-04-03 14:59:24.000000000 -0400
@@ -1776,6 +1776,8 @@
     ls->reuseport = addr->opt.reuseport;
 #endif
 
+    ls->per_worker = addr->opt.per_worker;
+
     return ls;
 }
 
Only in openresty-1.13.6.2/bundle/nginx-1.13.6/src/http: ngx_http.c.orig
diff -ru openresty-1.13.6.2/bundle/nginx-1.13.6/src/http/ngx_http_core_module.c openresty-1.13.6.2/bundle/nginx-1.13.6/src/http/ngx_http_core_module.c
--- openresty-1.13.6.2/bundle/nginx-1.13.6/src/http/ngx_http_core_module.c	2018-05-14 16:24:38.000000000 -0400
+++ openresty-1.13.6.2/bundle/nginx-1.13.6/src/http/ngx_http_core_module.c	2019-04-03 14:59:32.000000000 -0400
@@ -3793,6 +3793,11 @@
             continue;
         }
 
+        if (ngx_strcmp(value[n].data, "per_worker") == 0) {
+            lsopt.per_worker = 1;
+            continue;
+        }
+
 #if (NGX_HAVE_SETFIB)
         if (ngx_strncmp(value[n].data, "setfib=", 7) == 0) {
             lsopt.setfib = ngx_atoi(value[n].data + 7, value[n].len - 7);
Only in openresty-1.13.6.2/bundle/nginx-1.13.6/src/http: ngx_http_core_module.c.orig
diff -ru openresty-1.13.6.2/bundle/nginx-1.13.6/src/http/ngx_http_core_module.h openresty-1.13.6.2/bundle/nginx-1.13.6/src/http/ngx_http_core_module.h
--- openresty-1.13.6.2/bundle/nginx-1.13.6/src/http/ngx_http_core_module.h	2017-10-26 01:42:53.000000000 -0400
+++ openresty-1.13.6.2/bundle/nginx-1.13.6/src/http/ngx_http_core_module.h	2019-04-03 15:05:57.000000000 -0400
@@ -72,6 +72,7 @@
     unsigned                   default_server:1;
     unsigned                   bind:1;
     unsigned                   wildcard:1;
+    unsigned                   per_worker:1;
     unsigned                   ssl:1;
     unsigned                   http2:1;
 #if (NGX_HAVE_INET6)
Only in openresty-1.13.6.2/bundle/nginx-1.13.6/src/http: ngx_http_request.c.orig
Only in openresty-1.13.6.2/bundle/nginx-1.13.6/src/http: ngx_http_special_response.c.orig
diff -ru openresty-1.13.6.2/bundle/nginx-1.13.6/src/os/unix/ngx_process.c openresty-1.13.6.2/bundle/nginx-1.13.6/src/os/unix/ngx_process.c
--- openresty-1.13.6.2/bundle/nginx-1.13.6/src/os/unix/ngx_process.c	2017-10-26 01:42:53.000000000 -0400
+++ openresty-1.13.6.2/bundle/nginx-1.13.6/src/os/unix/ngx_process.c	2019-04-03 14:59:49.000000000 -0400
@@ -34,6 +34,7 @@
 ngx_socket_t     ngx_channel;
 ngx_int_t        ngx_last_process;
 ngx_process_t    ngx_processes[NGX_MAX_PROCESSES];
+ngx_int_t        ngx_worker_slot;
 
 
 ngx_signal_t  signals[] = {
diff -ru openresty-1.13.6.2/bundle/nginx-1.13.6/src/os/unix/ngx_process.h openresty-1.13.6.2/bundle/nginx-1.13.6/src/os/unix/ngx_process.h
--- openresty-1.13.6.2/bundle/nginx-1.13.6/src/os/unix/ngx_process.h	2017-10-26 01:42:53.000000000 -0400
+++ openresty-1.13.6.2/bundle/nginx-1.13.6/src/os/unix/ngx_process.h	2019-04-03 14:59:55.000000000 -0400
@@ -83,6 +83,7 @@
 extern ngx_int_t      ngx_process_slot;
 extern ngx_int_t      ngx_last_process;
 extern ngx_process_t  ngx_processes[NGX_MAX_PROCESSES];
+extern ngx_int_t      ngx_worker_slot;
 
 
 #endif /* _NGX_PROCESS_H_INCLUDED_ */
diff -ru openresty-1.13.6.2/bundle/nginx-1.13.6/src/os/unix/ngx_process_cycle.c openresty-1.13.6.2/bundle/nginx-1.13.6/src/os/unix/ngx_process_cycle.c
--- openresty-1.13.6.2/bundle/nginx-1.13.6/src/os/unix/ngx_process_cycle.c	2018-05-14 16:24:38.000000000 -0400
+++ openresty-1.13.6.2/bundle/nginx-1.13.6/src/os/unix/ngx_process_cycle.c	2019-04-03 15:08:25.000000000 -0400
@@ -802,6 +802,8 @@
     ngx_process = NGX_PROCESS_WORKER;
     ngx_worker = worker;
 
+    ngx_worker_slot = worker;
+
     ngx_worker_process_init(cycle, worker);
 
     ngx_setproctitle("worker process");
@@ -967,6 +969,11 @@
         ls[i].previous = NULL;
     }
 
+    if (ngx_open_listening_sockets(cycle) != NGX_OK) {
+        ngx_log_error(NGX_LOG_ALERT, cycle->log, ngx_errno, "failed to init worker listeners");
+        exit(2);
+    }
+
     for (i = 0; cycle->modules[i]; i++) {
         if (cycle->modules[i]->init_process) {
             if (cycle->modules[i]->init_process(cycle) == NGX_ERROR) {
Only in openresty-1.13.6.2/bundle/nginx-1.13.6/src/os/unix: ngx_process_cycle.c.orig
